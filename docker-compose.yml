version: "3.7"

# @TODO: Add image with their tag name for each service
services:
  db:
    build:
      context: ./db
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: dbtest
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data

  adminer:
    image: "adminer:4.8.0"
    restart: always
    ports:
      - 8080:8080

  bff:
    depends_on:
      - db
      - api
      - reverse-proxy
    build:
      context: ./bff
    environment:
      NODE_ENV: development
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: dbtest
      PGPORT: 5432
      PORT: 3000
      API_URL: http://api:3333

  api:
    depends_on:
      - db
    build:
      context: ./api
    environment:
      NODE_ENV: development
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: job_platform
      PGPORT: 5432
      PORT: 3333

  reverse-proxy:
    depends_on:
      - ui
      - adminer
    build:
      context: ./reverse-proxy
    ports:
      - 80:80
  ui:
    build:
      context: ./ui
    environment:
      NODE_ENV: development
      IS_REACT: "false"

  elasticsearch:
    build:
      context: ./elk/elasticsearch
    restart: always
    environment:
      xpack.security.enabled: "false"
      discovery.type: single-node
    volumes:
      - ./elk/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  logstash:
    build:
      context: ./elk/logstash
    ports:
      - 5044:5044
    environment:
      LOG_LEVEL: info
    links:
      - elasticsearch

  filebeat:
    build:
      context: ./elk/filebeat
    volumes:
      # needed to access all docker logs (read only) :
      - "/var/lib/docker/containers:/usr/share/dockerlogs/data:ro"
      # needed to access additional informations about containers
      - "/var/run/docker.sock:/var/run/docker.sock"

  kibana:
    depends_on:
      - elasticsearch
    image: "kibana:7.10.1"
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601

  test-server:
    build:
      context: ./test-server
    environment:
      NODE_ENV: development

volumes:
  pgdata:
  elasticsearch:
